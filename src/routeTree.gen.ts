/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as DashboardImport } from './routes/dashboard'
import { Route as AdminImport } from './routes/admin'
import { Route as IndexImport } from './routes/index'
import { Route as DashboardIndexImport } from './routes/dashboard/index'
import { Route as AdminIndexImport } from './routes/admin/index'
import { Route as DashboardMemoImport } from './routes/dashboard/memo'
import { Route as DashboardGameSuggestionsImport } from './routes/dashboard/game-suggestions'
import { Route as AdminUsersImport } from './routes/admin/users'
import { Route as AdminLocationsImport } from './routes/admin/locations'
import { Route as AdminGameSuggestionsImport } from './routes/admin/game-suggestions'
import { Route as AdminEventsImport } from './routes/admin/events'
import { Route as DashboardVoteEventIdImport } from './routes/dashboard/vote/$eventId'
import { Route as DashboardScheduleEventIdImport } from './routes/dashboard/schedule/$eventId'
import { Route as DashboardResultsEventIdImport } from './routes/dashboard/results/$eventId'
import { Route as DashboardMealsEventIdImport } from './routes/dashboard/meals/$eventId'
import { Route as DashboardCarpoolsEventIdImport } from './routes/dashboard/carpools/$eventId'
import { Route as AdminScheduleEventIdImport } from './routes/admin/schedule/$eventId'
import { Route as AdminResultsEventIdImport } from './routes/admin/results/$eventId'

// Create/Update Routes

const DashboardRoute = DashboardImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => rootRoute,
} as any)

const AdminRoute = AdminImport.update({
  id: '/admin',
  path: '/admin',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const DashboardIndexRoute = DashboardIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => DashboardRoute,
} as any)

const AdminIndexRoute = AdminIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AdminRoute,
} as any)

const DashboardMemoRoute = DashboardMemoImport.update({
  id: '/memo',
  path: '/memo',
  getParentRoute: () => DashboardRoute,
} as any)

const DashboardGameSuggestionsRoute = DashboardGameSuggestionsImport.update({
  id: '/game-suggestions',
  path: '/game-suggestions',
  getParentRoute: () => DashboardRoute,
} as any)

const AdminUsersRoute = AdminUsersImport.update({
  id: '/users',
  path: '/users',
  getParentRoute: () => AdminRoute,
} as any)

const AdminLocationsRoute = AdminLocationsImport.update({
  id: '/locations',
  path: '/locations',
  getParentRoute: () => AdminRoute,
} as any)

const AdminGameSuggestionsRoute = AdminGameSuggestionsImport.update({
  id: '/game-suggestions',
  path: '/game-suggestions',
  getParentRoute: () => AdminRoute,
} as any)

const AdminEventsRoute = AdminEventsImport.update({
  id: '/events',
  path: '/events',
  getParentRoute: () => AdminRoute,
} as any)

const DashboardVoteEventIdRoute = DashboardVoteEventIdImport.update({
  id: '/vote/$eventId',
  path: '/vote/$eventId',
  getParentRoute: () => DashboardRoute,
} as any)

const DashboardScheduleEventIdRoute = DashboardScheduleEventIdImport.update({
  id: '/schedule/$eventId',
  path: '/schedule/$eventId',
  getParentRoute: () => DashboardRoute,
} as any)

const DashboardResultsEventIdRoute = DashboardResultsEventIdImport.update({
  id: '/results/$eventId',
  path: '/results/$eventId',
  getParentRoute: () => DashboardRoute,
} as any)

const DashboardMealsEventIdRoute = DashboardMealsEventIdImport.update({
  id: '/meals/$eventId',
  path: '/meals/$eventId',
  getParentRoute: () => DashboardRoute,
} as any)

const DashboardCarpoolsEventIdRoute = DashboardCarpoolsEventIdImport.update({
  id: '/carpools/$eventId',
  path: '/carpools/$eventId',
  getParentRoute: () => DashboardRoute,
} as any)

const AdminScheduleEventIdRoute = AdminScheduleEventIdImport.update({
  id: '/schedule/$eventId',
  path: '/schedule/$eventId',
  getParentRoute: () => AdminRoute,
} as any)

const AdminResultsEventIdRoute = AdminResultsEventIdImport.update({
  id: '/results/$eventId',
  path: '/results/$eventId',
  getParentRoute: () => AdminRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/admin': {
      id: '/admin'
      path: '/admin'
      fullPath: '/admin'
      preLoaderRoute: typeof AdminImport
      parentRoute: typeof rootRoute
    }
    '/dashboard': {
      id: '/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof DashboardImport
      parentRoute: typeof rootRoute
    }
    '/admin/events': {
      id: '/admin/events'
      path: '/events'
      fullPath: '/admin/events'
      preLoaderRoute: typeof AdminEventsImport
      parentRoute: typeof AdminImport
    }
    '/admin/game-suggestions': {
      id: '/admin/game-suggestions'
      path: '/game-suggestions'
      fullPath: '/admin/game-suggestions'
      preLoaderRoute: typeof AdminGameSuggestionsImport
      parentRoute: typeof AdminImport
    }
    '/admin/locations': {
      id: '/admin/locations'
      path: '/locations'
      fullPath: '/admin/locations'
      preLoaderRoute: typeof AdminLocationsImport
      parentRoute: typeof AdminImport
    }
    '/admin/users': {
      id: '/admin/users'
      path: '/users'
      fullPath: '/admin/users'
      preLoaderRoute: typeof AdminUsersImport
      parentRoute: typeof AdminImport
    }
    '/dashboard/game-suggestions': {
      id: '/dashboard/game-suggestions'
      path: '/game-suggestions'
      fullPath: '/dashboard/game-suggestions'
      preLoaderRoute: typeof DashboardGameSuggestionsImport
      parentRoute: typeof DashboardImport
    }
    '/dashboard/memo': {
      id: '/dashboard/memo'
      path: '/memo'
      fullPath: '/dashboard/memo'
      preLoaderRoute: typeof DashboardMemoImport
      parentRoute: typeof DashboardImport
    }
    '/admin/': {
      id: '/admin/'
      path: '/'
      fullPath: '/admin/'
      preLoaderRoute: typeof AdminIndexImport
      parentRoute: typeof AdminImport
    }
    '/dashboard/': {
      id: '/dashboard/'
      path: '/'
      fullPath: '/dashboard/'
      preLoaderRoute: typeof DashboardIndexImport
      parentRoute: typeof DashboardImport
    }
    '/admin/results/$eventId': {
      id: '/admin/results/$eventId'
      path: '/results/$eventId'
      fullPath: '/admin/results/$eventId'
      preLoaderRoute: typeof AdminResultsEventIdImport
      parentRoute: typeof AdminImport
    }
    '/admin/schedule/$eventId': {
      id: '/admin/schedule/$eventId'
      path: '/schedule/$eventId'
      fullPath: '/admin/schedule/$eventId'
      preLoaderRoute: typeof AdminScheduleEventIdImport
      parentRoute: typeof AdminImport
    }
    '/dashboard/carpools/$eventId': {
      id: '/dashboard/carpools/$eventId'
      path: '/carpools/$eventId'
      fullPath: '/dashboard/carpools/$eventId'
      preLoaderRoute: typeof DashboardCarpoolsEventIdImport
      parentRoute: typeof DashboardImport
    }
    '/dashboard/meals/$eventId': {
      id: '/dashboard/meals/$eventId'
      path: '/meals/$eventId'
      fullPath: '/dashboard/meals/$eventId'
      preLoaderRoute: typeof DashboardMealsEventIdImport
      parentRoute: typeof DashboardImport
    }
    '/dashboard/results/$eventId': {
      id: '/dashboard/results/$eventId'
      path: '/results/$eventId'
      fullPath: '/dashboard/results/$eventId'
      preLoaderRoute: typeof DashboardResultsEventIdImport
      parentRoute: typeof DashboardImport
    }
    '/dashboard/schedule/$eventId': {
      id: '/dashboard/schedule/$eventId'
      path: '/schedule/$eventId'
      fullPath: '/dashboard/schedule/$eventId'
      preLoaderRoute: typeof DashboardScheduleEventIdImport
      parentRoute: typeof DashboardImport
    }
    '/dashboard/vote/$eventId': {
      id: '/dashboard/vote/$eventId'
      path: '/vote/$eventId'
      fullPath: '/dashboard/vote/$eventId'
      preLoaderRoute: typeof DashboardVoteEventIdImport
      parentRoute: typeof DashboardImport
    }
  }
}

// Create and export the route tree

interface AdminRouteChildren {
  AdminEventsRoute: typeof AdminEventsRoute
  AdminGameSuggestionsRoute: typeof AdminGameSuggestionsRoute
  AdminLocationsRoute: typeof AdminLocationsRoute
  AdminUsersRoute: typeof AdminUsersRoute
  AdminIndexRoute: typeof AdminIndexRoute
  AdminResultsEventIdRoute: typeof AdminResultsEventIdRoute
  AdminScheduleEventIdRoute: typeof AdminScheduleEventIdRoute
}

const AdminRouteChildren: AdminRouteChildren = {
  AdminEventsRoute: AdminEventsRoute,
  AdminGameSuggestionsRoute: AdminGameSuggestionsRoute,
  AdminLocationsRoute: AdminLocationsRoute,
  AdminUsersRoute: AdminUsersRoute,
  AdminIndexRoute: AdminIndexRoute,
  AdminResultsEventIdRoute: AdminResultsEventIdRoute,
  AdminScheduleEventIdRoute: AdminScheduleEventIdRoute,
}

const AdminRouteWithChildren = AdminRoute._addFileChildren(AdminRouteChildren)

interface DashboardRouteChildren {
  DashboardGameSuggestionsRoute: typeof DashboardGameSuggestionsRoute
  DashboardMemoRoute: typeof DashboardMemoRoute
  DashboardIndexRoute: typeof DashboardIndexRoute
  DashboardCarpoolsEventIdRoute: typeof DashboardCarpoolsEventIdRoute
  DashboardMealsEventIdRoute: typeof DashboardMealsEventIdRoute
  DashboardResultsEventIdRoute: typeof DashboardResultsEventIdRoute
  DashboardScheduleEventIdRoute: typeof DashboardScheduleEventIdRoute
  DashboardVoteEventIdRoute: typeof DashboardVoteEventIdRoute
}

const DashboardRouteChildren: DashboardRouteChildren = {
  DashboardGameSuggestionsRoute: DashboardGameSuggestionsRoute,
  DashboardMemoRoute: DashboardMemoRoute,
  DashboardIndexRoute: DashboardIndexRoute,
  DashboardCarpoolsEventIdRoute: DashboardCarpoolsEventIdRoute,
  DashboardMealsEventIdRoute: DashboardMealsEventIdRoute,
  DashboardResultsEventIdRoute: DashboardResultsEventIdRoute,
  DashboardScheduleEventIdRoute: DashboardScheduleEventIdRoute,
  DashboardVoteEventIdRoute: DashboardVoteEventIdRoute,
}

const DashboardRouteWithChildren = DashboardRoute._addFileChildren(
  DashboardRouteChildren,
)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/admin': typeof AdminRouteWithChildren
  '/dashboard': typeof DashboardRouteWithChildren
  '/admin/events': typeof AdminEventsRoute
  '/admin/game-suggestions': typeof AdminGameSuggestionsRoute
  '/admin/locations': typeof AdminLocationsRoute
  '/admin/users': typeof AdminUsersRoute
  '/dashboard/game-suggestions': typeof DashboardGameSuggestionsRoute
  '/dashboard/memo': typeof DashboardMemoRoute
  '/admin/': typeof AdminIndexRoute
  '/dashboard/': typeof DashboardIndexRoute
  '/admin/results/$eventId': typeof AdminResultsEventIdRoute
  '/admin/schedule/$eventId': typeof AdminScheduleEventIdRoute
  '/dashboard/carpools/$eventId': typeof DashboardCarpoolsEventIdRoute
  '/dashboard/meals/$eventId': typeof DashboardMealsEventIdRoute
  '/dashboard/results/$eventId': typeof DashboardResultsEventIdRoute
  '/dashboard/schedule/$eventId': typeof DashboardScheduleEventIdRoute
  '/dashboard/vote/$eventId': typeof DashboardVoteEventIdRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/admin/events': typeof AdminEventsRoute
  '/admin/game-suggestions': typeof AdminGameSuggestionsRoute
  '/admin/locations': typeof AdminLocationsRoute
  '/admin/users': typeof AdminUsersRoute
  '/dashboard/game-suggestions': typeof DashboardGameSuggestionsRoute
  '/dashboard/memo': typeof DashboardMemoRoute
  '/admin': typeof AdminIndexRoute
  '/dashboard': typeof DashboardIndexRoute
  '/admin/results/$eventId': typeof AdminResultsEventIdRoute
  '/admin/schedule/$eventId': typeof AdminScheduleEventIdRoute
  '/dashboard/carpools/$eventId': typeof DashboardCarpoolsEventIdRoute
  '/dashboard/meals/$eventId': typeof DashboardMealsEventIdRoute
  '/dashboard/results/$eventId': typeof DashboardResultsEventIdRoute
  '/dashboard/schedule/$eventId': typeof DashboardScheduleEventIdRoute
  '/dashboard/vote/$eventId': typeof DashboardVoteEventIdRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/admin': typeof AdminRouteWithChildren
  '/dashboard': typeof DashboardRouteWithChildren
  '/admin/events': typeof AdminEventsRoute
  '/admin/game-suggestions': typeof AdminGameSuggestionsRoute
  '/admin/locations': typeof AdminLocationsRoute
  '/admin/users': typeof AdminUsersRoute
  '/dashboard/game-suggestions': typeof DashboardGameSuggestionsRoute
  '/dashboard/memo': typeof DashboardMemoRoute
  '/admin/': typeof AdminIndexRoute
  '/dashboard/': typeof DashboardIndexRoute
  '/admin/results/$eventId': typeof AdminResultsEventIdRoute
  '/admin/schedule/$eventId': typeof AdminScheduleEventIdRoute
  '/dashboard/carpools/$eventId': typeof DashboardCarpoolsEventIdRoute
  '/dashboard/meals/$eventId': typeof DashboardMealsEventIdRoute
  '/dashboard/results/$eventId': typeof DashboardResultsEventIdRoute
  '/dashboard/schedule/$eventId': typeof DashboardScheduleEventIdRoute
  '/dashboard/vote/$eventId': typeof DashboardVoteEventIdRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/admin'
    | '/dashboard'
    | '/admin/events'
    | '/admin/game-suggestions'
    | '/admin/locations'
    | '/admin/users'
    | '/dashboard/game-suggestions'
    | '/dashboard/memo'
    | '/admin/'
    | '/dashboard/'
    | '/admin/results/$eventId'
    | '/admin/schedule/$eventId'
    | '/dashboard/carpools/$eventId'
    | '/dashboard/meals/$eventId'
    | '/dashboard/results/$eventId'
    | '/dashboard/schedule/$eventId'
    | '/dashboard/vote/$eventId'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/admin/events'
    | '/admin/game-suggestions'
    | '/admin/locations'
    | '/admin/users'
    | '/dashboard/game-suggestions'
    | '/dashboard/memo'
    | '/admin'
    | '/dashboard'
    | '/admin/results/$eventId'
    | '/admin/schedule/$eventId'
    | '/dashboard/carpools/$eventId'
    | '/dashboard/meals/$eventId'
    | '/dashboard/results/$eventId'
    | '/dashboard/schedule/$eventId'
    | '/dashboard/vote/$eventId'
  id:
    | '__root__'
    | '/'
    | '/admin'
    | '/dashboard'
    | '/admin/events'
    | '/admin/game-suggestions'
    | '/admin/locations'
    | '/admin/users'
    | '/dashboard/game-suggestions'
    | '/dashboard/memo'
    | '/admin/'
    | '/dashboard/'
    | '/admin/results/$eventId'
    | '/admin/schedule/$eventId'
    | '/dashboard/carpools/$eventId'
    | '/dashboard/meals/$eventId'
    | '/dashboard/results/$eventId'
    | '/dashboard/schedule/$eventId'
    | '/dashboard/vote/$eventId'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AdminRoute: typeof AdminRouteWithChildren
  DashboardRoute: typeof DashboardRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AdminRoute: AdminRouteWithChildren,
  DashboardRoute: DashboardRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/admin",
        "/dashboard"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/admin": {
      "filePath": "admin.tsx",
      "children": [
        "/admin/events",
        "/admin/game-suggestions",
        "/admin/locations",
        "/admin/users",
        "/admin/",
        "/admin/results/$eventId",
        "/admin/schedule/$eventId"
      ]
    },
    "/dashboard": {
      "filePath": "dashboard.tsx",
      "children": [
        "/dashboard/game-suggestions",
        "/dashboard/memo",
        "/dashboard/",
        "/dashboard/carpools/$eventId",
        "/dashboard/meals/$eventId",
        "/dashboard/results/$eventId",
        "/dashboard/schedule/$eventId",
        "/dashboard/vote/$eventId"
      ]
    },
    "/admin/events": {
      "filePath": "admin/events.tsx",
      "parent": "/admin"
    },
    "/admin/game-suggestions": {
      "filePath": "admin/game-suggestions.tsx",
      "parent": "/admin"
    },
    "/admin/locations": {
      "filePath": "admin/locations.tsx",
      "parent": "/admin"
    },
    "/admin/users": {
      "filePath": "admin/users.tsx",
      "parent": "/admin"
    },
    "/dashboard/game-suggestions": {
      "filePath": "dashboard/game-suggestions.tsx",
      "parent": "/dashboard"
    },
    "/dashboard/memo": {
      "filePath": "dashboard/memo.tsx",
      "parent": "/dashboard"
    },
    "/admin/": {
      "filePath": "admin/index.tsx",
      "parent": "/admin"
    },
    "/dashboard/": {
      "filePath": "dashboard/index.tsx",
      "parent": "/dashboard"
    },
    "/admin/results/$eventId": {
      "filePath": "admin/results/$eventId.tsx",
      "parent": "/admin"
    },
    "/admin/schedule/$eventId": {
      "filePath": "admin/schedule/$eventId.tsx",
      "parent": "/admin"
    },
    "/dashboard/carpools/$eventId": {
      "filePath": "dashboard/carpools/$eventId.tsx",
      "parent": "/dashboard"
    },
    "/dashboard/meals/$eventId": {
      "filePath": "dashboard/meals/$eventId.tsx",
      "parent": "/dashboard"
    },
    "/dashboard/results/$eventId": {
      "filePath": "dashboard/results/$eventId.tsx",
      "parent": "/dashboard"
    },
    "/dashboard/schedule/$eventId": {
      "filePath": "dashboard/schedule/$eventId.tsx",
      "parent": "/dashboard"
    },
    "/dashboard/vote/$eventId": {
      "filePath": "dashboard/vote/$eventId.tsx",
      "parent": "/dashboard"
    }
  }
}
ROUTE_MANIFEST_END */
